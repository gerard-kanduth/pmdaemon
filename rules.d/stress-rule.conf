# Name of the rule
RULE_NAME=stress-rule

# Command which will be monitored (can either be "/usr/bin/stress" or simply "stress")
# The command needs to start with this string to get monitored
COMMAND=stress

# If you define the COMMAND e.g. "stress", only processes starting with exact "stress" will be monitored
# However, a user may start the command with "/bin/stress" or "/usr/bin/stress"
# By enabling INCLUDE_BINARY_FOLDER_CHECK the following variations will also be checked:
#
# /bin/stress
# /sbin/stress
# /usr/bin/stress
# /usr/sbin/stress
# /usr/local/bin/stress
# /usr/local/sbin/stress
#
# (0=off, 1=on)
INCLUDE_BINARY_FOLDER_CHECK=1

# Enable wildcard command checking (COMMAND string must only be included in the actual command to trigger this rule)
WILDCARD_MATCH=0

# Set a threshold for CPU and MEM (in percent, floating-point)
# As soon as the process is above this values it will be added to the penalty-list
CPU_TRIGGER_THRESHOLD=20.0
MEM_TRIGGER_THRESHOLD=20.0

# The CHECK_INTERVAL (in seconds) and the default CHECKS_BEFORE_ALERT is set in the settings.conf file
# This setting can be overwritten for specific commands by simply setting CHECKS_BEFORE_ALERT here
CHECKS_BEFORE_ALERT=10

# Decide if limiting on the given process should be performed, otherwise only alerting and data-collecting will be done (0=off, 1=on)
ENABLE_LIMITING=1

# Limit the given process to the following core-limit (in percent)
LIMIT_CPU_PERCENT=5

# Limit the given process to the following mem-limit (in bytes)
LIMIT_MEMORY_VALUE=50000

# Decide if the OOM-Killer should be invoked if the memory-limit is reached (0=off, 1=on)
OOM_KILL_ENABLED=1

# Decide if the process should be checked, otherwise no limiting and/or alerting will be performed (0=off, 1=on)
NO_CHECK=0

# This option will put the process'es PID to the freezer - process will be "paused" (0=off, 1=on)
FREEZE=0

# This option will simply kill the process as soon as it was above the threshold limits for CHECK_INTERVAL * CHECKS_BEFORE_ALERT (in seconds)
# (0=off, 1=on)
PID_KILL_ENABLED=0

# Decide if data from /proc/<PID> should be collected and send for further analysis (0=off, 1=on)
SEND_PROCESS_FILES=1
